-- /* CAMBIOS ADICIONALES PARA GRUPO SILVESTRE */

ALTER TABLE BIEN_SERVICIO ALTER (DESCRIPCION_LARGA NVARCHAR(150))

ALTER TABLE BIEN_SERVICIO ALTER (UNIDAD_INVENTARIO NVARCHAR(105))

ALTER TABLE BIEN_SERVICIO ALTER (CODIGO_SAP NVARCHAR(20))

ALTER TABLE UNIDAD_MEDIDA ALTER (CODIGO_SAP NVARCHAR(10));

ALTER TABLE DOCUMENTO_ACEPTACION_DETALLE ALTER (CODIGO_SAP_BIEN_SERVICIO NVARCHAR(20));

ALTER TABLE DOCUMENTO_ACEPTACION_DETALLE ALTER (DESCRIPCION_BIEN_SERVICIO NVARCHAR(150));

ALTER TABLE ORDEN_COMPRA ALTER (PROVEEDOR_RAZON_SOCIAL NVARCHAR(300));

ALTER TABLE ORDEN_COMPRA_DETALLE ALTER (CODIGO_SAP_BIEN_SERVICIO NVARCHAR(20));

ALTER TABLE ORDEN_COMPRA_DETALLE ALTER (DESCRIPCION_BIEN_SERVICIO NVARCHAR(150));

-- AGREGAR PRD. agregado el 15/04/21
ALTER TABLE PREFACTURA ALTER (OBSERVACIONES NVARCHAR(255));
ALTER TABLE PREFACTURA ADD (XML_ECM_ID NVARCHAR(100));
ALTER TABLE PREFACTURA ADD (PDF_ECM_ID NVARCHAR(100));

 -- AGREGAR PRD. agregado el 19/05/21
ALTER TABLE ORDEN_COMPRA ADD (FECHA_VIGENCIA TIMESTAMP);
ALTER TABLE documento_aceptacion ALTER (PROVEEDOR_RAZON_SOCIAL NVARCHAR(300));

-- Agregar PRD. agregado el 23/05/21
ALTER TABLE PREFACTURA ADD (GUIA_ECM_PATH NVARCHAR(500));
ALTER TABLE PREFACTURA ADD (GUIA_ECM_ID NVARCHAR(100));
ALTER TABLE GRUPO_CONDICION_LIC_RESPUESTA ALTER (OPCION NVARCHAR(100));

-- END PRD

-- /* CAMBIOS OMITIDOS */ NOT USED
DROP PROCEDURE SP_UPDATE_DOCUMENTO_ACEPTACION_FIELDS (
	P_OP_GUIA_COMPRA 	INTEGER,
	P_CODIGO_PROVEEDOR	NVARCHAR(20)
) AS
BEGIN

	declare v_found_proveedor		integer := 0;

	SELECT count(1) INTO v_found_proveedor FROM PROVEEDOR p WHERE p.RUC = P_CODIGO_PROVEEDOR;

	/* 1. Set nombre proveedor */
	if :v_found_proveedor != 0 then

		UPDATE DOCUMENTO_ACEPTACION a SET a.PROVEEDOR_RAZON_SOCIAL = (SELECT p2.RAZON_SOCIAL FROM PROVEEDOR p2 WHERE p2.RUC=P_CODIGO_PROVEEDOR)
			WHERE a.NUMERO_DOCUMENTO_ACEPTACION = P_OP_GUIA_COMPRA;

	END IF;
END;

DROP PROCEDURE SP_UPDATE_DOCUMENTO_ACEPTACION_DETALLE_FIELDS (
	P_OP_GUIA_COMPRA 	INTEGER,
	P_ID_AMARRE			INTEGER,
	P_ID_AMARRE_OC		INTEGER,
	P_CODIGO_PRODUCTO	NVARCHAR(20),
	P_KARDEX			INTEGER
) AS
BEGIN

	/* Set codigoMoneda, PrecioUnitario, valorRecibido*/

	DECLARE v_found_ocdet			integer := 0;
	DECLARE v_found_bien_servicio	integer := 0;

	SELECT count(1) INTO v_found_ocdet FROM ORDEN_COMPRA_DETALLE ocd WHERE ocd.ID_AMARRE = P_ID_AMARRE_OC;
	SELECT COUNT(1) INTO v_found_bien_servicio FROM BIEN_SERVICIO bs WHERE bs.CODIGO_SAP = P_CODIGO_PRODUCTO AND bs.KARDEX = P_KARDEX;

	if :v_found_ocdet != 0 then
		/* MONEDA */
		UPDATE DOCUMENTO_ACEPTACION a SET a.CODIGO_MONEDA = (
				SELECT oc.CODIGO_MONEDA FROM ORDEN_COMPRA_DETALLE ocdet
					INNER JOIN ORDEN_COMPRA oc ON oc.ID_ORDEN_COMPRA = OCDET.ID_ORDEN_COMPRA
					WHERE ocdet.ID_AMARRE =P_ID_AMARRE_OC)
			WHERE a.OP_GUIA_COMPRA = P_OP_GUIA_COMPRA;

		/* PRECIO_UNITARIO */
		UPDATE DOCUMENTO_ACEPTACION_DETALLE b SET b.PRECIO_UNITARIO = (
				SELECT ocdet.PRECIO_UNITARIO FROM ORDEN_COMPRA_DETALLE ocdet WHERE ocdet.ID_AMARRE =P_ID_AMARRE_OC)
			WHERE b.ID_AMARRE = P_ID_AMARRE AND b.ID_AMARRE_OC = P_ID_AMARRE_OC;

		/* VALOR_RECIBIDO (precio x cantidad) */
		UPDATE DOCUMENTO_ACEPTACION_DETALLE c SET c.VALOR_RECIBIDO = CANTIDAD_ACEPTADA_CLIENTE * PRECIO_UNITARIO
			WHERE c.ID_AMARRE = P_ID_AMARRE AND c.ID_AMARRE_OC = P_ID_AMARRE_OC;

	END IF;

	IF :v_found_bien_servicio != 0 THEN
		/* DESCRIPCION BIEN SERVICIO */
		UPDATE DOCUMENTO_ACEPTACION_DETALLE d SET d.DESCRIPCION_BIEN_SERVICIO = (
				SELECT bs.DESCRIPCION FROM BIEN_SERVICIO bs WHERE bs.CODIGO_SAP = P_CODIGO_PRODUCTO AND bs.KARDEX = P_KARDEX)
			WHERE d.ID_AMARRE = P_ID_AMARRE AND d.ID_AMARRE_OC = P_ID_AMARRE_OC;

	END IF;

END;